<manifest xmlns:android="http://schemas.android.com/apk/res/android">
                <!-- Adde by Pat Montilla - START -->
    <!--ðŸ‘‡ Required for foreground services -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--ðŸ‘‡ Android 14+ specific foreground service type for location -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_LOCATION" />
    <!--ðŸ‘‡ Needed to post persistent notification for the service -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <!--ðŸ‘‡ Optional but recommended if later using location -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!--ðŸ‘‡If you want the background service to restart after device reboot-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!--Required permission for Android 10+-->
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
                <!--Adde by Pat Montilla - END -->
    <application
        android:label="project_nexus_mobile_app"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:usesCleartextTraffic="true">

                <!-- Adde by Pat Montilla - START -->
        <!--ðŸ‘‡ Service declaration goes here -->
        <service
        android:name="id.flutter.flutter_background_service.BackgroundService"
        android:foregroundServiceType="location"
        android:enabled="true"
        android:exported="true"
        android:permission="android.permission.BIND_JOB_SERVICE" />

        <!-- NEW: Receiver to restart service after reboot -->
        <receiver
            android:name=".BootReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
                <!--Adde by Pat Montilla - END -->

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
